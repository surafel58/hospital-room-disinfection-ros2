<?xml version="1.0" ?>
<robot name="ajrobot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<gazebo>
  <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
  </plugin>
</gazebo>

<!--#####################Differential_Drive#############################-->
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <update_rate>30</update_rate>
    <left_joint>lwheel_joint</left_joint>
    <right_joint>rwheel_joint</right_joint>
    <wheel_separation>0.137</wheel_separation>
    <wheel_diameter>0.06</wheel_diameter>
    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>
    <command_topic>cmd_vel</command_topic>
    <odometry_topic>odom</odometry_topic>
    <odometry_frame>odom</odometry_frame>
    <publish_wheel_tf>true</publish_wheel_tf>
    <publish_tf>true</publish_tf>
    <!-- we disable it if we want other odometry source to publish this topic (localization package) -->
    <publish_odom_tf>true</publish_odom_tf>
    <publish_odom>true</publish_odom>
    <publish_wheel_joint_state>true</publish_wheel_joint_state>
    <robot_base_frame>base_link</robot_base_frame>
    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometry_source>1</odometry_source>
    <ros>
      <namespace>/</namespace>
      <remapping>odom:=odom</remapping>
      <remapping>cmd_vel:=cmd_vel</remapping>
    </ros>
  </plugin>
</gazebo>

<!--#####################Lidar#############################-->


<gazebo reference="lidar_1">
  <sensor name="lidar" type="ray">
    <pose>0 0 0 0 0 0</pose>
    <visualize>true</visualize>
    <update_rate>10</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>180</samples>
          <resolution>1.0</resolution>
          <min_angle>-1.57</min_angle>
          <max_angle>1.57</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.1</min>
        <max>2.5</max>
        <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>

              <plugin name="pc2" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=pointcloud2</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud2</output_type>
            <frame_name>lidar_1</frame_name>
          </plugin>
          <plugin name="pc" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=pointcloud</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud</output_type>
            <frame_name>lidar_1</frame_name>
          </plugin>
          <plugin name="laserscan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
               <remapping>~/out:=scan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
            <frame_name>lidar_1</frame_name>
          </plugin>
          <plugin name="range" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <frame_name>lidar_1</frame_name>
          </plugin>
  </sensor>
</gazebo>



<!-- camera -->
<gazebo reference="camera_1">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <pose>0.052209 0.000782 0.071425 0 0 0</pose>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>/robot</namespace>
          <remapping>image_raw:=camera/image_raw</remapping>
          <remapping>camera_info:=camera/camera_info</remapping>
        </ros>
        <frame_name>camera_1</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
</gazebo>
</robot>
